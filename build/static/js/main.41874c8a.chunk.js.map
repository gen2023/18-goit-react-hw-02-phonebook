{"version":3,"sources":["components/AddContact/AddContact.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["AddContact","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","saveContact","resetForm","this","onSubmit","className","type","placeholder","onChange","Component","defaultProps","ContactListItem","onRemove","onClick","ContactList","contacts","onRemoveContact","map","id","key","Filter","filter","handleFilter","App","contact","shortid","generate","find","alert","concat","removeContact","toLowerCase","includes","filterView","filterReturn","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41874c8a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nexport default class AddContact extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    saveContact: propTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.saveContact({ ...this.state });\n    this.resetForm();\n  };\n\n  resetForm() {\n    this.setState({ name: '', number: '' });\n  }\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"addContact\">\n          <label>\n            Name\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter name\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n        <div className=\"addContact\">\n          <label>\n            number\n            <input\n              type=\"text\"\n              className=\"input\"\n              placeholder=\"Enter number\"\n              value={number}\n              name=\"number\"\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nfunction ContactListItem({ name, number, onRemove }) {\n  return (\n    <li>\n      {name}: {number}\n      <button className=\"buttonDelete\" type=\"button\" onClick={onRemove}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n  onRemove: propTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport ContactListItem from './ContactListItem';\n\nfunction ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onRemove={() => onRemoveContact(id)}\n        />\n      ))}\n    </ul>\n  );\n}\nContactList.propTypes = {\n  contacts: propTypes.oneOfType([\n    propTypes.arrayOf(\n      propTypes.exact({\n        id: propTypes.string.isRequired,\n        name: propTypes.string.isRequired,\n        number: propTypes.number.isRequired,\n      }),\n    ),\n    propTypes.array,\n  ]),\n  onRemoveContact: propTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nconst Filter = ({ filter, handleFilter }) => (\n  <div>\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Enter name\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleFilter}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: propTypes.string.isRequired,\n  handleFilter: propTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nimport './style.css';\nimport '../../node_modules/modern-normalize/modern-normalize.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  saveContact = ({ name, number }) => {\n    const contact = { name, number, id: shortid.generate() };\n\n    const { contacts } = this.state;\n    const checkedName = contacts.find(contact => name === contact.name);\n\n    if (checkedName) {\n      return alert(`${name} is already in contacts`);\n    }\n    if (!name || !number) {\n      return alert(`Fill in all the fields`);\n    }\n\n    this.setState(state => ({ contacts: state.contacts.concat(contact) }));\n  };\n  handleFilter = event => {\n    this.setState({ filter: event.target.value });\n  };\n  filterReturn() {\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n  }\n  removeContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filterView = this.filterReturn();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <AddContact saveContact={this.saveContact} />\n        <h2>Contact</h2>\n        {contacts.length >= 2 && (\n          <Filter filter={filter} handleFilter={this.handleFilter} />\n        )}\n        {filterView.length > 0 ? (\n          <ContactList\n            contacts={filterView}\n            onRemoveContact={this.removeContact}\n          />\n        ) : (\n          contacts.length !== 0 && (\n            <ContactList\n              contacts={contacts}\n              onRemoveContact={this.removeContact}\n            />\n          )\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}